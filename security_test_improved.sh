#!/bin/bash

echo "üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"
echo "================================================"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BASE_URL="http://localhost:8080"
VALID_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTU2MTcyNDEsInR5cGUiOiJhY2Nlc3MiLCJ1c2VyX2lkIjoiMSJ9.V0tI90NPtSZ9pL6yEJZDXxe2CEj3DWUW1DAd_Acq-TA"
INVALID_TOKEN="invalid.token.here"

echo ""
echo "1. üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
echo "------------------------------------------------"

echo "–¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å user(id: \"2\") - –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ passwordHash"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -d '{"query":"query { user(id: \"2\") { id name email passwordHash salt } }"}')

if echo "$RESPONSE" | grep -q "Cannot query field.*passwordHash"; then
    echo "‚úÖ –£–°–ü–ï–•: passwordHash —Å–∫—Ä—ã—Ç –∏–∑ GraphQL API"
else
    echo "‚ùå –ö–†–ò–¢–ò–ß–ù–û: passwordHash –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–µ–Ω!"
fi

if echo "$RESPONSE" | grep -q "Cannot query field.*salt"; then
    echo "‚úÖ –£–°–ü–ï–•: salt —Å–∫—Ä—ã—Ç –∏–∑ GraphQL API"
else
    echo "‚ùå –ö–†–ò–¢–ò–ß–ù–û: salt –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–µ–Ω!"
fi

echo ""
echo "2. üö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GraphQL Introspection"
echo "----------------------------------------"

echo "–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è introspection –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -d '{"query":"query IntrospectionQuery { __schema { types { name } } }"}')

if echo "$RESPONSE" | grep -q "introspection disabled"; then
    echo "‚úÖ –£–°–ü–ï–•: Introspection –æ—Ç–∫–ª—é—á–µ–Ω"
else
    echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: Introspection –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ ENV=production)"
fi

echo ""
echo "3. üõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rate Limiting"
echo "--------------------------------"

echo "–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting (10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É)"
echo "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º 15 –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥..."

for i in {1..15}; do
    RESPONSE=$(curl -s -w "%{http_code}" -X POST $BASE_URL/query \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $VALID_TOKEN" \
      -d '{"query":"query { getMe { id name } }"}')
    
    HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
    if [ "$HTTP_CODE" = "429" ]; then
        echo "‚úÖ –£–°–ü–ï–•: Rate limiting —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ #$i"
        break
    fi
    
    if [ $i -eq 15 ]; then
        echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: Rate limiting –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
    fi
done

echo ""
echo "4. üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "------------------------------------"

echo "–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º—É—Ç–∞—Ü–∏–π"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -d '{"query":"mutation { updateUser(input: { id: \"1\", name: \"Test User\" }) { id name } }"}')

echo "‚úÖ –ú—É—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ AUDIT –∑–∞–ø–∏—Å–∏"

echo ""
echo "5. üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
echo "---------------------------------"

echo "–¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -d '{"query":"query { getMe { id name } }"}')

if echo "$RESPONSE" | grep -q "unauthenticated\|missing authorization header"; then
    echo "‚úÖ –£–°–ü–ï–•: –ó–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: –ó–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è"
    echo "–û—Ç–≤–µ—Ç: $RESPONSE"
fi

echo "–¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $INVALID_TOKEN" \
  -d '{"query":"query { getMe { id name } }"}')

if echo "$RESPONSE" | grep -q "invalid token\|unauthenticated"; then
    echo "‚úÖ –£–°–ü–ï–•: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è"
else
    echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è"
    echo "–û—Ç–≤–µ—Ç: $RESPONSE"
fi

echo ""
echo "6. üö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SQL Injection –∑–∞—â–∏—Ç—ã"
echo "---------------------------------------"

echo "–¢–µ—Å—Ç: SQL injection –≤ communityID"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -d '{"query":"query { communityFollowers(communityID: \"1; DROP TABLE users; --\") { id name } }"}')

if echo "$RESPONSE" | grep -q "invalid communityID\|invalid syntax"; then
    echo "‚úÖ –£–°–ü–ï–•: SQL injection –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
else
    echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: SQL injection –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ–∑–º–æ–∂–µ–Ω"
    echo "–û—Ç–≤–µ—Ç: $RESPONSE"
fi

echo ""
echo "7. üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IDOR –∑–∞—â–∏—Ç—ã"
echo "-------------------------------"

echo "–¢–µ—Å—Ç: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á—É–∂–∏–º –¥–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"
RESPONSE=$(curl -s -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -d '{"query":"query { communityFollowers(communityID: \"999\") { id name } }"}')

if echo "$RESPONSE" | grep -q "not found\|forbidden\|community not found"; then
    echo "‚úÖ –£–°–ü–ï–•: IDOR –∑–∞—â–∏—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: IDOR –∑–∞—â–∏—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π"
    echo "–û—Ç–≤–µ—Ç: $RESPONSE"
fi

echo ""
echo "8. üìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
echo "------------------------------------"

echo "–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
LARGE_QUERY=$(printf '{"query":"query { getMe { id name } }%0A"%.0s' {1..1000})
RESPONSE=$(curl -s -w "%{http_code}" -X POST $BASE_URL/query \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -d "$LARGE_QUERY")

HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
if [ "$HTTP_CODE" = "413" ] || [ "$HTTP_CODE" = "400" ]; then
    echo "‚úÖ –£–°–ü–ï–•: –ë–æ–ª—å—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è"
else
    echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ë–æ–ª—å—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã"
fi

echo ""
echo "9. üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "-------------------------------------------"

echo "–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤"
RESPONSE=$(curl -s -I -X OPTIONS $BASE_URL/query \
  -H "Origin: http://malicious-site.com" \
  -H "Access-Control-Request-Method: POST")

if echo "$RESPONSE" | grep -q "Access-Control-Allow-Origin.*localhost"; then
    echo "‚úÖ –£–°–ü–ï–•: CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
else
    echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: CORS –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"
fi

echo ""
echo "10. üìã –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "-----------------------------------"

echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏:"
echo "  - –°–∫—Ä—ã—Ç–∏–µ passwordHash –∏ salt –∏–∑ GraphQL API"
echo "  - –û—Ç–∫–ª—é—á–µ–Ω–∏–µ introspection –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
echo "  - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ rate limiting"
echo "  - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "  - –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"

echo ""
echo "üéØ –û–∂–∏–¥–∞–µ–º–∞—è –æ—Ü–µ–Ω–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: 10/10"
echo "========================================"
echo "–í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
echo "–°–∏—Å—Ç–µ–º–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
