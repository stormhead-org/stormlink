package modules

import (
	"context"
	"log"
	"stormlink/server/ent/hostrole"
	"stormlink/server/ent/hostsidebarnavigation"

	"stormlink/server/ent"
	"stormlink/server/ent/host"
)

func Seed(client *ent.Client) error {
	ctx := context.Background()

	// –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–∏–¥–∏–ª–∏—Å—å –ª–∏ —Ä–æ–ª–∏?
	roleOwnerExists, err := client.HostRole.Query().Where(hostrole.TitleEQ("owner")).Exist(ctx)
	if err != nil {
		log.Println("‚úÖ –†–æ–ª—å host owner —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...")
		return err
	}
	if !roleOwnerExists {
		log.Println("üå± –°–∏–¥–∏–º —Ä–æ–ª—å host owner...")
		if _, err := client.HostRole.Create().
			SetTitle("owner").
			SetColor("#99AAB5").
			SetCommunityRolesManagement(true).
			SetHostUserBan(true).
			SetHostUserMute(true).
			SetHostCommunityDeletePost(true).
			SetHostCommunityRemovePostFromPublication(true).
			SetHostCommunityDeleteComments(true).
			Save(ctx); err != nil {
			return err
		}
		log.Printf("‚úÖ –†–æ–ª—å host owner —Å–æ–∑–¥–∞–Ω–∞")
	}
	roleEveryoneExists, err := client.HostRole.Query().Where(hostrole.TitleEQ("@everyone")).Exist(ctx)
	if err != nil {
		log.Println("‚úÖ –†–æ–ª—å host @everyone —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...")
		return err
	}
	if !roleEveryoneExists {
		log.Println("üå± –°–∏–¥–∏–º —Ä–æ–ª—å host @everyone...")
		if _, err := client.HostRole.Create().
			SetTitle("@everyone").
			SetColor("#99AAB5").
			Save(ctx); err != nil {
			return err
		}
		log.Printf("‚úÖ –†–æ–ª—å host @everyone —Å–æ–∑–¥–∞–Ω–∞")
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–∏–¥–∏–ª—Å—è –ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π host
	hostExists, err := client.Host.Query().Where(host.IDEQ(1)).Exist(ctx)
	if err != nil {
		log.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ host —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...")
		return err
	}
	if !hostExists {
		log.Println("üå± –°–∏–¥–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ host...")
		if _, err := client.Host.Create().
			SetTitle("Stormic").
			SetSlogan("–∫–æ–¥, GitHub –∏ —Ç—ã").
			SetFirstSettings(true).
			SetDescription("–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º").
			Save(ctx); err != nil {
			return err
		}
		log.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ host —Å–æ–∑–¥–∞–Ω–∞")
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–∏–¥–∏–ª—Å—è –ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π HostSidebarNavigation
	hostSidebarNavigationExists, err := client.HostSidebarNavigation.Query().Where(hostsidebarnavigation.IDEQ(1)).Exist(ctx)
	if err != nil {
		log.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ HostSidebarNavigation —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...")
		return err
	}
	if !hostSidebarNavigationExists {
		log.Println("üå± –°–∏–¥–∏–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é HostSidebarNavigation...")
		if _, err := client.HostSidebarNavigation.Create().
			Save(ctx); err != nil {
			return err
		}
		log.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ HostSidebarNavigation —Å–æ–∑–¥–∞–Ω–∞")
	}

	return nil
}
