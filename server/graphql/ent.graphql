directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Bookmark implements Node {
  id: ID!
  userID: ID!
  postID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  post: Post!
}
"""
BookmarkWhereInput is used for filtering Bookmark objects.
Input was generated by ent.
"""
input BookmarkWhereInput {
  not: BookmarkWhereInput
  and: [BookmarkWhereInput!]
  or: [BookmarkWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  post_id field predicates
  """
  postID: ID
  postIDNEQ: ID
  postIDIn: [ID!]
  postIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  post edge predicates
  """
  hasPost: Boolean
  hasPostWith: [PostWhereInput!]
}
type Comment implements Node {
  id: ID!
  authorID: ID!
  postID: ID!
  communityID: ID!
  parentCommentID: ID
  mediaID: ID
  hasDeleted: Boolean!
  hasUpdated: Boolean!
  content: String!
  createdAt: Time!
  updatedAt: Time!
  author: User!
  post: Post!
  community: Community!
  media: Media
  parentComment: Comment
  childrenComment: [Comment!]
  likes: [CommentLike!]
}
type CommentLike implements Node {
  id: ID!
  userID: ID!
  commentID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  comment: Comment!
}
"""
CommentLikeWhereInput is used for filtering CommentLike objects.
Input was generated by ent.
"""
input CommentLikeWhereInput {
  not: CommentLikeWhereInput
  and: [CommentLikeWhereInput!]
  or: [CommentLikeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  comment_id field predicates
  """
  commentID: ID
  commentIDNEQ: ID
  commentIDIn: [ID!]
  commentIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  comment edge predicates
  """
  hasComment: Boolean
  hasCommentWith: [CommentWhereInput!]
}
"""
CommentWhereInput is used for filtering Comment objects.
Input was generated by ent.
"""
input CommentWhereInput {
  not: CommentWhereInput
  and: [CommentWhereInput!]
  or: [CommentWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  author_id field predicates
  """
  authorID: ID
  authorIDNEQ: ID
  authorIDIn: [ID!]
  authorIDNotIn: [ID!]
  """
  post_id field predicates
  """
  postID: ID
  postIDNEQ: ID
  postIDIn: [ID!]
  postIDNotIn: [ID!]
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  parent_comment_id field predicates
  """
  parentCommentID: ID
  parentCommentIDNEQ: ID
  parentCommentIDIn: [ID!]
  parentCommentIDNotIn: [ID!]
  parentCommentIDIsNil: Boolean
  parentCommentIDNotNil: Boolean
  """
  media_id field predicates
  """
  mediaID: ID
  mediaIDNEQ: ID
  mediaIDIn: [ID!]
  mediaIDNotIn: [ID!]
  mediaIDIsNil: Boolean
  mediaIDNotNil: Boolean
  """
  has_deleted field predicates
  """
  hasDeleted: Boolean
  hasDeletedNEQ: Boolean
  """
  has_updated field predicates
  """
  hasUpdated: Boolean
  hasUpdatedNEQ: Boolean
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentEqualFold: String
  contentContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  author edge predicates
  """
  hasAuthor: Boolean
  hasAuthorWith: [UserWhereInput!]
  """
  post edge predicates
  """
  hasPost: Boolean
  hasPostWith: [PostWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
  """
  media edge predicates
  """
  hasMedia: Boolean
  hasMediaWith: [MediaWhereInput!]
  """
  parent_comment edge predicates
  """
  hasParentComment: Boolean
  hasParentCommentWith: [CommentWhereInput!]
  """
  children_comment edge predicates
  """
  hasChildrenComment: Boolean
  hasChildrenCommentWith: [CommentWhereInput!]
  """
  likes edge predicates
  """
  hasLikes: Boolean
  hasLikesWith: [CommentLikeWhereInput!]
}
type Community implements Node {
  id: ID!
  logoID: ID
  bannerID: ID
  ownerID: ID!
  title: String!
  slug: String!
  contacts: String
  description: String
  communityHasBanned: Boolean!
  createdAt: Time!
  updatedAt: Time!
  logo: Media
  banner: Media
  owner: User!
  communityInfo: [ProfileTableInfoItem!]
  moderators: [CommunityModerator!]
  roles: [Role!]
  rules: [CommunityRule!]
  followers: [CommunityFollow!]
  bans: [CommunityUserBan!]
  mutes: [CommunityUserMute!]
  posts: [Post!]
  comments: [Comment!]
}
type CommunityFollow implements Node {
  id: ID!
  userID: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  community: Community!
}
"""
CommunityFollowWhereInput is used for filtering CommunityFollow objects.
Input was generated by ent.
"""
input CommunityFollowWhereInput {
  not: CommunityFollowWhereInput
  and: [CommunityFollowWhereInput!]
  or: [CommunityFollowWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type CommunityModerator implements Node {
  id: ID!
  userID: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  community: Community!
}
"""
CommunityModeratorWhereInput is used for filtering CommunityModerator objects.
Input was generated by ent.
"""
input CommunityModeratorWhereInput {
  not: CommunityModeratorWhereInput
  and: [CommunityModeratorWhereInput!]
  or: [CommunityModeratorWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type CommunityRule implements Node {
  id: ID!
  communityID: ID
  title: String!
  description: String
  createdAt: Time!
  updatedAt: Time!
  community: Community
}
"""
CommunityRuleWhereInput is used for filtering CommunityRule objects.
Input was generated by ent.
"""
input CommunityRuleWhereInput {
  not: CommunityRuleWhereInput
  and: [CommunityRuleWhereInput!]
  or: [CommunityRuleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  communityIDIsNil: Boolean
  communityIDNotNil: Boolean
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type CommunityUserBan implements Node {
  id: ID!
  userID: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  community: Community!
}
"""
CommunityUserBanWhereInput is used for filtering CommunityUserBan objects.
Input was generated by ent.
"""
input CommunityUserBanWhereInput {
  not: CommunityUserBanWhereInput
  and: [CommunityUserBanWhereInput!]
  or: [CommunityUserBanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type CommunityUserMute implements Node {
  id: ID!
  userID: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  community: Community!
}
"""
CommunityUserMuteWhereInput is used for filtering CommunityUserMute objects.
Input was generated by ent.
"""
input CommunityUserMuteWhereInput {
  not: CommunityUserMuteWhereInput
  and: [CommunityUserMuteWhereInput!]
  or: [CommunityUserMuteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
"""
CommunityWhereInput is used for filtering Community objects.
Input was generated by ent.
"""
input CommunityWhereInput {
  not: CommunityWhereInput
  and: [CommunityWhereInput!]
  or: [CommunityWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  logo_id field predicates
  """
  logoID: ID
  logoIDNEQ: ID
  logoIDIn: [ID!]
  logoIDNotIn: [ID!]
  logoIDIsNil: Boolean
  logoIDNotNil: Boolean
  """
  banner_id field predicates
  """
  bannerID: ID
  bannerIDNEQ: ID
  bannerIDIn: [ID!]
  bannerIDNotIn: [ID!]
  bannerIDIsNil: Boolean
  bannerIDNotNil: Boolean
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugEqualFold: String
  slugContainsFold: String
  """
  contacts field predicates
  """
  contacts: String
  contactsNEQ: String
  contactsIn: [String!]
  contactsNotIn: [String!]
  contactsGT: String
  contactsGTE: String
  contactsLT: String
  contactsLTE: String
  contactsContains: String
  contactsHasPrefix: String
  contactsHasSuffix: String
  contactsIsNil: Boolean
  contactsNotNil: Boolean
  contactsEqualFold: String
  contactsContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  community_has_banned field predicates
  """
  communityHasBanned: Boolean
  communityHasBannedNEQ: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  logo edge predicates
  """
  hasLogo: Boolean
  hasLogoWith: [MediaWhereInput!]
  """
  banner edge predicates
  """
  hasBanner: Boolean
  hasBannerWith: [MediaWhereInput!]
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """
  community_info edge predicates
  """
  hasCommunityInfo: Boolean
  hasCommunityInfoWith: [ProfileTableInfoItemWhereInput!]
  """
  moderators edge predicates
  """
  hasModerators: Boolean
  hasModeratorsWith: [CommunityModeratorWhereInput!]
  """
  roles edge predicates
  """
  hasRoles: Boolean
  hasRolesWith: [RoleWhereInput!]
  """
  rules edge predicates
  """
  hasRules: Boolean
  hasRulesWith: [CommunityRuleWhereInput!]
  """
  followers edge predicates
  """
  hasFollowers: Boolean
  hasFollowersWith: [CommunityFollowWhereInput!]
  """
  bans edge predicates
  """
  hasBans: Boolean
  hasBansWith: [CommunityUserBanWhereInput!]
  """
  mutes edge predicates
  """
  hasMutes: Boolean
  hasMutesWith: [CommunityUserMuteWhereInput!]
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
  """
  comments edge predicates
  """
  hasComments: Boolean
  hasCommentsWith: [CommentWhereInput!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type EmailVerification implements Node {
  id: ID!
  token: String!
  expiresAt: Time!
  createdAt: Time!
  user: User
}
"""
EmailVerificationWhereInput is used for filtering EmailVerification objects.
Input was generated by ent.
"""
input EmailVerificationWhereInput {
  not: EmailVerificationWhereInput
  and: [EmailVerificationWhereInput!]
  or: [EmailVerificationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  token field predicates
  """
  token: String
  tokenNEQ: String
  tokenIn: [String!]
  tokenNotIn: [String!]
  tokenGT: String
  tokenGTE: String
  tokenLT: String
  tokenLTE: String
  tokenContains: String
  tokenHasPrefix: String
  tokenHasSuffix: String
  tokenEqualFold: String
  tokenContainsFold: String
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type Host implements Node {
  id: ID!
  title: String
  slogan: String
  contacts: String
  description: String
  logoID: ID
  bannerID: ID
  authBannerID: ID
  ownerID: ID
  firstSettings: Boolean!
  createdAt: Time!
  updatedAt: Time!
  logo: Media
  banner: Media
  authBanner: Media
  owner: User
  rules: [HostRule!]
}
type HostCommunityBan implements Node {
  id: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  community: Community!
}
"""
HostCommunityBanWhereInput is used for filtering HostCommunityBan objects.
Input was generated by ent.
"""
input HostCommunityBanWhereInput {
  not: HostCommunityBanWhereInput
  and: [HostCommunityBanWhereInput!]
  or: [HostCommunityBanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type HostCommunityMute implements Node {
  id: ID!
  communityID: ID!
  createdAt: Time!
  updatedAt: Time!
  community: Community!
}
"""
HostCommunityMuteWhereInput is used for filtering HostCommunityMute objects.
Input was generated by ent.
"""
input HostCommunityMuteWhereInput {
  not: HostCommunityMuteWhereInput
  and: [HostCommunityMuteWhereInput!]
  or: [HostCommunityMuteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
}
type HostRole implements Node {
  id: ID!
  title: String!
  badgeID: ID
  color: String
  communityRolesManagement: Boolean!
  hostUserBan: Boolean!
  hostUserMute: Boolean!
  hostCommunityDeletePost: Boolean!
  hostCommunityRemovePostFromPublication: Boolean!
  hostCommunityDeleteComments: Boolean!
  createdAt: Time!
  updatedAt: Time!
  badge: Media
  users: [User!]
}
"""
HostRoleWhereInput is used for filtering HostRole objects.
Input was generated by ent.
"""
input HostRoleWhereInput {
  not: HostRoleWhereInput
  and: [HostRoleWhereInput!]
  or: [HostRoleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  badge_id field predicates
  """
  badgeID: ID
  badgeIDNEQ: ID
  badgeIDIn: [ID!]
  badgeIDNotIn: [ID!]
  badgeIDIsNil: Boolean
  badgeIDNotNil: Boolean
  """
  color field predicates
  """
  color: String
  colorNEQ: String
  colorIn: [String!]
  colorNotIn: [String!]
  colorGT: String
  colorGTE: String
  colorLT: String
  colorLTE: String
  colorContains: String
  colorHasPrefix: String
  colorHasSuffix: String
  colorIsNil: Boolean
  colorNotNil: Boolean
  colorEqualFold: String
  colorContainsFold: String
  """
  community_roles_management field predicates
  """
  communityRolesManagement: Boolean
  communityRolesManagementNEQ: Boolean
  """
  host_user_ban field predicates
  """
  hostUserBan: Boolean
  hostUserBanNEQ: Boolean
  """
  host_user_mute field predicates
  """
  hostUserMute: Boolean
  hostUserMuteNEQ: Boolean
  """
  host_community_delete_post field predicates
  """
  hostCommunityDeletePost: Boolean
  hostCommunityDeletePostNEQ: Boolean
  """
  host_community_remove_post_from_publication field predicates
  """
  hostCommunityRemovePostFromPublication: Boolean
  hostCommunityRemovePostFromPublicationNEQ: Boolean
  """
  host_community_delete_comments field predicates
  """
  hostCommunityDeleteComments: Boolean
  hostCommunityDeleteCommentsNEQ: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  badge edge predicates
  """
  hasBadge: Boolean
  hasBadgeWith: [MediaWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
}
type HostRule implements Node {
  id: ID!
  hostID: ID
  title: String
  description: String
  createdAt: Time!
  updatedAt: Time!
  host: Host
}
"""
HostRuleWhereInput is used for filtering HostRule objects.
Input was generated by ent.
"""
input HostRuleWhereInput {
  not: HostRuleWhereInput
  and: [HostRuleWhereInput!]
  or: [HostRuleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  host_id field predicates
  """
  hostID: ID
  hostIDNEQ: ID
  hostIDIn: [ID!]
  hostIDNotIn: [ID!]
  hostIDIsNil: Boolean
  hostIDNotNil: Boolean
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIsNil: Boolean
  titleNotNil: Boolean
  titleEqualFold: String
  titleContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  host edge predicates
  """
  hasHost: Boolean
  hasHostWith: [HostWhereInput!]
}
type HostSidebarNavigation implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  items: [HostSidebarNavigationItem!]
}
type HostSidebarNavigationItem implements Node {
  id: ID!
  sidebarNavigationID: ID!
  postID: ID!
  createdAt: Time!
  updatedAt: Time!
  sidebarNavigation: HostSidebarNavigation!
  post: Post!
}
"""
HostSidebarNavigationItemWhereInput is used for filtering HostSidebarNavigationItem objects.
Input was generated by ent.
"""
input HostSidebarNavigationItemWhereInput {
  not: HostSidebarNavigationItemWhereInput
  and: [HostSidebarNavigationItemWhereInput!]
  or: [HostSidebarNavigationItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  sidebar_navigation_id field predicates
  """
  sidebarNavigationID: ID
  sidebarNavigationIDNEQ: ID
  sidebarNavigationIDIn: [ID!]
  sidebarNavigationIDNotIn: [ID!]
  """
  post_id field predicates
  """
  postID: ID
  postIDNEQ: ID
  postIDIn: [ID!]
  postIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  sidebar_navigation edge predicates
  """
  hasSidebarNavigation: Boolean
  hasSidebarNavigationWith: [HostSidebarNavigationWhereInput!]
  """
  post edge predicates
  """
  hasPost: Boolean
  hasPostWith: [PostWhereInput!]
}
"""
HostSidebarNavigationWhereInput is used for filtering HostSidebarNavigation objects.
Input was generated by ent.
"""
input HostSidebarNavigationWhereInput {
  not: HostSidebarNavigationWhereInput
  and: [HostSidebarNavigationWhereInput!]
  or: [HostSidebarNavigationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  items edge predicates
  """
  hasItems: Boolean
  hasItemsWith: [HostSidebarNavigationItemWhereInput!]
}
type HostSocialNavigation implements Node {
  id: ID!
  github: String
  site: String
  telegram: String
  instagram: String
  twitter: String
  mastodon: String
  createdAt: Time!
  updatedAt: Time!
}
"""
HostSocialNavigationWhereInput is used for filtering HostSocialNavigation objects.
Input was generated by ent.
"""
input HostSocialNavigationWhereInput {
  not: HostSocialNavigationWhereInput
  and: [HostSocialNavigationWhereInput!]
  or: [HostSocialNavigationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  github field predicates
  """
  github: String
  githubNEQ: String
  githubIn: [String!]
  githubNotIn: [String!]
  githubGT: String
  githubGTE: String
  githubLT: String
  githubLTE: String
  githubContains: String
  githubHasPrefix: String
  githubHasSuffix: String
  githubIsNil: Boolean
  githubNotNil: Boolean
  githubEqualFold: String
  githubContainsFold: String
  """
  site field predicates
  """
  site: String
  siteNEQ: String
  siteIn: [String!]
  siteNotIn: [String!]
  siteGT: String
  siteGTE: String
  siteLT: String
  siteLTE: String
  siteContains: String
  siteHasPrefix: String
  siteHasSuffix: String
  siteIsNil: Boolean
  siteNotNil: Boolean
  siteEqualFold: String
  siteContainsFold: String
  """
  telegram field predicates
  """
  telegram: String
  telegramNEQ: String
  telegramIn: [String!]
  telegramNotIn: [String!]
  telegramGT: String
  telegramGTE: String
  telegramLT: String
  telegramLTE: String
  telegramContains: String
  telegramHasPrefix: String
  telegramHasSuffix: String
  telegramIsNil: Boolean
  telegramNotNil: Boolean
  telegramEqualFold: String
  telegramContainsFold: String
  """
  instagram field predicates
  """
  instagram: String
  instagramNEQ: String
  instagramIn: [String!]
  instagramNotIn: [String!]
  instagramGT: String
  instagramGTE: String
  instagramLT: String
  instagramLTE: String
  instagramContains: String
  instagramHasPrefix: String
  instagramHasSuffix: String
  instagramIsNil: Boolean
  instagramNotNil: Boolean
  instagramEqualFold: String
  instagramContainsFold: String
  """
  twitter field predicates
  """
  twitter: String
  twitterNEQ: String
  twitterIn: [String!]
  twitterNotIn: [String!]
  twitterGT: String
  twitterGTE: String
  twitterLT: String
  twitterLTE: String
  twitterContains: String
  twitterHasPrefix: String
  twitterHasSuffix: String
  twitterIsNil: Boolean
  twitterNotNil: Boolean
  twitterEqualFold: String
  twitterContainsFold: String
  """
  mastodon field predicates
  """
  mastodon: String
  mastodonNEQ: String
  mastodonIn: [String!]
  mastodonNotIn: [String!]
  mastodonGT: String
  mastodonGTE: String
  mastodonLT: String
  mastodonLTE: String
  mastodonContains: String
  mastodonHasPrefix: String
  mastodonHasSuffix: String
  mastodonIsNil: Boolean
  mastodonNotNil: Boolean
  mastodonEqualFold: String
  mastodonContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
}
type HostUserBan implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
}
"""
HostUserBanWhereInput is used for filtering HostUserBan objects.
Input was generated by ent.
"""
input HostUserBanWhereInput {
  not: HostUserBanWhereInput
  and: [HostUserBanWhereInput!]
  or: [HostUserBanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type HostUserMute implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
}
"""
HostUserMuteWhereInput is used for filtering HostUserMute objects.
Input was generated by ent.
"""
input HostUserMuteWhereInput {
  not: HostUserMuteWhereInput
  and: [HostUserMuteWhereInput!]
  or: [HostUserMuteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""
HostWhereInput is used for filtering Host objects.
Input was generated by ent.
"""
input HostWhereInput {
  not: HostWhereInput
  and: [HostWhereInput!]
  or: [HostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIsNil: Boolean
  titleNotNil: Boolean
  titleEqualFold: String
  titleContainsFold: String
  """
  slogan field predicates
  """
  slogan: String
  sloganNEQ: String
  sloganIn: [String!]
  sloganNotIn: [String!]
  sloganGT: String
  sloganGTE: String
  sloganLT: String
  sloganLTE: String
  sloganContains: String
  sloganHasPrefix: String
  sloganHasSuffix: String
  sloganIsNil: Boolean
  sloganNotNil: Boolean
  sloganEqualFold: String
  sloganContainsFold: String
  """
  contacts field predicates
  """
  contacts: String
  contactsNEQ: String
  contactsIn: [String!]
  contactsNotIn: [String!]
  contactsGT: String
  contactsGTE: String
  contactsLT: String
  contactsLTE: String
  contactsContains: String
  contactsHasPrefix: String
  contactsHasSuffix: String
  contactsIsNil: Boolean
  contactsNotNil: Boolean
  contactsEqualFold: String
  contactsContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  logo_id field predicates
  """
  logoID: ID
  logoIDNEQ: ID
  logoIDIn: [ID!]
  logoIDNotIn: [ID!]
  logoIDIsNil: Boolean
  logoIDNotNil: Boolean
  """
  banner_id field predicates
  """
  bannerID: ID
  bannerIDNEQ: ID
  bannerIDIn: [ID!]
  bannerIDNotIn: [ID!]
  bannerIDIsNil: Boolean
  bannerIDNotNil: Boolean
  """
  auth_banner_id field predicates
  """
  authBannerID: ID
  authBannerIDNEQ: ID
  authBannerIDIn: [ID!]
  authBannerIDNotIn: [ID!]
  authBannerIDIsNil: Boolean
  authBannerIDNotNil: Boolean
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  """
  first_settings field predicates
  """
  firstSettings: Boolean
  firstSettingsNEQ: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  logo edge predicates
  """
  hasLogo: Boolean
  hasLogoWith: [MediaWhereInput!]
  """
  banner edge predicates
  """
  hasBanner: Boolean
  hasBannerWith: [MediaWhereInput!]
  """
  auth_banner edge predicates
  """
  hasAuthBanner: Boolean
  hasAuthBannerWith: [MediaWhereInput!]
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """
  rules edge predicates
  """
  hasRules: Boolean
  hasRulesWith: [HostRuleWhereInput!]
}
type Media implements Node {
  id: ID!
  alt: String
  url: String
  thumbnailURL: String
  filename: String
  createdAt: Time!
  updatedAt: Time!
}
"""
MediaWhereInput is used for filtering Media objects.
Input was generated by ent.
"""
input MediaWhereInput {
  not: MediaWhereInput
  and: [MediaWhereInput!]
  or: [MediaWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  alt field predicates
  """
  alt: String
  altNEQ: String
  altIn: [String!]
  altNotIn: [String!]
  altGT: String
  altGTE: String
  altLT: String
  altLTE: String
  altContains: String
  altHasPrefix: String
  altHasSuffix: String
  altIsNil: Boolean
  altNotNil: Boolean
  altEqualFold: String
  altContainsFold: String
  """
  url field predicates
  """
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlIsNil: Boolean
  urlNotNil: Boolean
  urlEqualFold: String
  urlContainsFold: String
  """
  thumbnail_url field predicates
  """
  thumbnailURL: String
  thumbnailURLNEQ: String
  thumbnailURLIn: [String!]
  thumbnailURLNotIn: [String!]
  thumbnailURLGT: String
  thumbnailURLGTE: String
  thumbnailURLLT: String
  thumbnailURLLTE: String
  thumbnailURLContains: String
  thumbnailURLHasPrefix: String
  thumbnailURLHasSuffix: String
  thumbnailURLIsNil: Boolean
  thumbnailURLNotNil: Boolean
  thumbnailURLEqualFold: String
  thumbnailURLContainsFold: String
  """
  filename field predicates
  """
  filename: String
  filenameNEQ: String
  filenameIn: [String!]
  filenameNotIn: [String!]
  filenameGT: String
  filenameGTE: String
  filenameLT: String
  filenameLTE: String
  filenameContains: String
  filenameHasPrefix: String
  filenameHasSuffix: String
  filenameIsNil: Boolean
  filenameNotNil: Boolean
  filenameEqualFold: String
  filenameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "stormlink/server/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Post implements Node {
  id: ID!
  title: String!
  slug: String!
  content: JSON!
  heroImageID: ID
  communityID: ID!
  authorID: ID!
  views: Int!
  visibility: PostVisibility!
  createdAt: Time!
  updatedAt: Time!
  publishedAt: Time
  heroImage: Media
  comments: [Comment!]
  relatedPost: [Post!]
  community: Community!
  author: User!
  likes: [PostLike!]
  bookmarks: [Bookmark!]
}
type PostLike implements Node {
  id: ID!
  userID: ID!
  postID: ID!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  post: Post!
}
"""
PostLikeWhereInput is used for filtering PostLike objects.
Input was generated by ent.
"""
input PostLikeWhereInput {
  not: PostLikeWhereInput
  and: [PostLikeWhereInput!]
  or: [PostLikeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  """
  post_id field predicates
  """
  postID: ID
  postIDNEQ: ID
  postIDIn: [ID!]
  postIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  post edge predicates
  """
  hasPost: Boolean
  hasPostWith: [PostWhereInput!]
}
"""
PostVisibility is enum for the field visibility
"""
enum PostVisibility @goModel(model: "stormlink/server/ent/post.Visibility") {
  published
  draft
  deleted
}
"""
PostWhereInput is used for filtering Post objects.
Input was generated by ent.
"""
input PostWhereInput {
  not: PostWhereInput
  and: [PostWhereInput!]
  or: [PostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugEqualFold: String
  slugContainsFold: String
  """
  hero_image_id field predicates
  """
  heroImageID: ID
  heroImageIDNEQ: ID
  heroImageIDIn: [ID!]
  heroImageIDNotIn: [ID!]
  heroImageIDIsNil: Boolean
  heroImageIDNotNil: Boolean
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  author_id field predicates
  """
  authorID: ID
  authorIDNEQ: ID
  authorIDIn: [ID!]
  authorIDNotIn: [ID!]
  """
  views field predicates
  """
  views: Int
  viewsNEQ: Int
  viewsIn: [Int!]
  viewsNotIn: [Int!]
  viewsGT: Int
  viewsGTE: Int
  viewsLT: Int
  viewsLTE: Int
  """
  visibility field predicates
  """
  visibility: PostVisibility
  visibilityNEQ: PostVisibility
  visibilityIn: [PostVisibility!]
  visibilityNotIn: [PostVisibility!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  published_at field predicates
  """
  publishedAt: Time
  publishedAtNEQ: Time
  publishedAtIn: [Time!]
  publishedAtNotIn: [Time!]
  publishedAtGT: Time
  publishedAtGTE: Time
  publishedAtLT: Time
  publishedAtLTE: Time
  publishedAtIsNil: Boolean
  publishedAtNotNil: Boolean
  """
  hero_image edge predicates
  """
  hasHeroImage: Boolean
  hasHeroImageWith: [MediaWhereInput!]
  """
  comments edge predicates
  """
  hasComments: Boolean
  hasCommentsWith: [CommentWhereInput!]
  """
  related_post edge predicates
  """
  hasRelatedPost: Boolean
  hasRelatedPostWith: [PostWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
  """
  author edge predicates
  """
  hasAuthor: Boolean
  hasAuthorWith: [UserWhereInput!]
  """
  likes edge predicates
  """
  hasLikes: Boolean
  hasLikesWith: [PostLikeWhereInput!]
  """
  bookmarks edge predicates
  """
  hasBookmarks: Boolean
  hasBookmarksWith: [BookmarkWhereInput!]
}
type ProfileTableInfoItem implements Node {
  id: ID!
  key: String!
  value: String!
  communityID: ID
  userID: ID
  type: ProfileTableInfoItemType!
  createdAt: Time!
  updatedAt: Time!
  community: Community
  user: User
}
"""
ProfileTableInfoItemType is enum for the field type
"""
enum ProfileTableInfoItemType @goModel(model: "stormlink/server/ent/profiletableinfoitem.Type") {
  user
  community
}
"""
ProfileTableInfoItemWhereInput is used for filtering ProfileTableInfoItem objects.
Input was generated by ent.
"""
input ProfileTableInfoItemWhereInput {
  not: ProfileTableInfoItemWhereInput
  and: [ProfileTableInfoItemWhereInput!]
  or: [ProfileTableInfoItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  key field predicates
  """
  key: String
  keyNEQ: String
  keyIn: [String!]
  keyNotIn: [String!]
  keyGT: String
  keyGTE: String
  keyLT: String
  keyLTE: String
  keyContains: String
  keyHasPrefix: String
  keyHasSuffix: String
  keyEqualFold: String
  keyContainsFold: String
  """
  value field predicates
  """
  value: String
  valueNEQ: String
  valueIn: [String!]
  valueNotIn: [String!]
  valueGT: String
  valueGTE: String
  valueLT: String
  valueLTE: String
  valueContains: String
  valueHasPrefix: String
  valueHasSuffix: String
  valueEqualFold: String
  valueContainsFold: String
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  communityIDIsNil: Boolean
  communityIDNotNil: Boolean
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """
  type field predicates
  """
  type: ProfileTableInfoItemType
  typeNEQ: ProfileTableInfoItemType
  typeIn: [ProfileTableInfoItemType!]
  typeNotIn: [ProfileTableInfoItemType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
}
type Role implements Node {
  id: ID!
  title: String!
  badgeID: ID
  color: String
  communityID: ID!
  communityRolesManagement: Boolean!
  communityUserBan: Boolean!
  communityUserMute: Boolean!
  communityDeletePost: Boolean!
  communityRemovePostFromPublication: Boolean!
  communityDeleteComments: Boolean!
  createdAt: Time!
  updatedAt: Time!
  badge: Media
  community: Community!
  users: [User!]
}
"""
RoleWhereInput is used for filtering Role objects.
Input was generated by ent.
"""
input RoleWhereInput {
  not: RoleWhereInput
  and: [RoleWhereInput!]
  or: [RoleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  badge_id field predicates
  """
  badgeID: ID
  badgeIDNEQ: ID
  badgeIDIn: [ID!]
  badgeIDNotIn: [ID!]
  badgeIDIsNil: Boolean
  badgeIDNotNil: Boolean
  """
  color field predicates
  """
  color: String
  colorNEQ: String
  colorIn: [String!]
  colorNotIn: [String!]
  colorGT: String
  colorGTE: String
  colorLT: String
  colorLTE: String
  colorContains: String
  colorHasPrefix: String
  colorHasSuffix: String
  colorIsNil: Boolean
  colorNotNil: Boolean
  colorEqualFold: String
  colorContainsFold: String
  """
  community_id field predicates
  """
  communityID: ID
  communityIDNEQ: ID
  communityIDIn: [ID!]
  communityIDNotIn: [ID!]
  """
  community_roles_management field predicates
  """
  communityRolesManagement: Boolean
  communityRolesManagementNEQ: Boolean
  """
  community_user_ban field predicates
  """
  communityUserBan: Boolean
  communityUserBanNEQ: Boolean
  """
  community_user_mute field predicates
  """
  communityUserMute: Boolean
  communityUserMuteNEQ: Boolean
  """
  community_delete_post field predicates
  """
  communityDeletePost: Boolean
  communityDeletePostNEQ: Boolean
  """
  community_remove_post_from_publication field predicates
  """
  communityRemovePostFromPublication: Boolean
  communityRemovePostFromPublicationNEQ: Boolean
  """
  community_delete_comments field predicates
  """
  communityDeleteComments: Boolean
  communityDeleteCommentsNEQ: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  badge edge predicates
  """
  hasBadge: Boolean
  hasBadgeWith: [MediaWhereInput!]
  """
  community edge predicates
  """
  hasCommunity: Boolean
  hasCommunityWith: [CommunityWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
type User implements Node {
  id: ID!
  name: String!
  slug: String!
  avatarID: ID
  bannerID: ID
  description: String
  email: String!
  isVerified: Boolean!
  createdAt: Time!
  updatedAt: Time!
  avatar: Media
  banner: Media
  userInfo: [ProfileTableInfoItem!]
  hostRoles: [HostRole!]
  communitiesRoles: [Role!]
  communitiesBans: [CommunityUserBan!]
  communitiesMutes: [CommunityUserMute!]
  posts: [Post!]
  comments: [Comment!]
  following: [UserFollow!]
  followers: [UserFollow!]
  communitiesFollow: [CommunityFollow!]
  communitiesOwner: [Community!]
  communitiesModerator: [CommunityModerator!]
  postsLikes: [PostLike!]
  commentsLikes: [CommentLike!]
  bookmarks: [Bookmark!]
  emailVerifications: [EmailVerification!]
}
type UserFollow implements Node {
  id: ID!
  followerID: ID!
  followeeID: ID!
  createdAt: Time!
  updatedAt: Time!
  follower: User!
  followee: User!
}
"""
UserFollowWhereInput is used for filtering UserFollow objects.
Input was generated by ent.
"""
input UserFollowWhereInput {
  not: UserFollowWhereInput
  and: [UserFollowWhereInput!]
  or: [UserFollowWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  follower_id field predicates
  """
  followerID: ID
  followerIDNEQ: ID
  followerIDIn: [ID!]
  followerIDNotIn: [ID!]
  """
  followee_id field predicates
  """
  followeeID: ID
  followeeIDNEQ: ID
  followeeIDIn: [ID!]
  followeeIDNotIn: [ID!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  follower edge predicates
  """
  hasFollower: Boolean
  hasFollowerWith: [UserWhereInput!]
  """
  followee edge predicates
  """
  hasFollowee: Boolean
  hasFolloweeWith: [UserWhereInput!]
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugEqualFold: String
  slugContainsFold: String
  """
  avatar_id field predicates
  """
  avatarID: ID
  avatarIDNEQ: ID
  avatarIDIn: [ID!]
  avatarIDNotIn: [ID!]
  avatarIDIsNil: Boolean
  avatarIDNotNil: Boolean
  """
  banner_id field predicates
  """
  bannerID: ID
  bannerIDNEQ: ID
  bannerIDIn: [ID!]
  bannerIDNotIn: [ID!]
  bannerIDIsNil: Boolean
  bannerIDNotNil: Boolean
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  is_verified field predicates
  """
  isVerified: Boolean
  isVerifiedNEQ: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  avatar edge predicates
  """
  hasAvatar: Boolean
  hasAvatarWith: [MediaWhereInput!]
  """
  banner edge predicates
  """
  hasBanner: Boolean
  hasBannerWith: [MediaWhereInput!]
  """
  user_info edge predicates
  """
  hasUserInfo: Boolean
  hasUserInfoWith: [ProfileTableInfoItemWhereInput!]
  """
  host_roles edge predicates
  """
  hasHostRoles: Boolean
  hasHostRolesWith: [HostRoleWhereInput!]
  """
  communities_roles edge predicates
  """
  hasCommunitiesRoles: Boolean
  hasCommunitiesRolesWith: [RoleWhereInput!]
  """
  communities_bans edge predicates
  """
  hasCommunitiesBans: Boolean
  hasCommunitiesBansWith: [CommunityUserBanWhereInput!]
  """
  communities_mutes edge predicates
  """
  hasCommunitiesMutes: Boolean
  hasCommunitiesMutesWith: [CommunityUserMuteWhereInput!]
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
  """
  comments edge predicates
  """
  hasComments: Boolean
  hasCommentsWith: [CommentWhereInput!]
  """
  following edge predicates
  """
  hasFollowing: Boolean
  hasFollowingWith: [UserFollowWhereInput!]
  """
  followers edge predicates
  """
  hasFollowers: Boolean
  hasFollowersWith: [UserFollowWhereInput!]
  """
  communities_follow edge predicates
  """
  hasCommunitiesFollow: Boolean
  hasCommunitiesFollowWith: [CommunityFollowWhereInput!]
  """
  communities_owner edge predicates
  """
  hasCommunitiesOwner: Boolean
  hasCommunitiesOwnerWith: [CommunityWhereInput!]
  """
  communities_moderator edge predicates
  """
  hasCommunitiesModerator: Boolean
  hasCommunitiesModeratorWith: [CommunityModeratorWhereInput!]
  """
  posts_likes edge predicates
  """
  hasPostsLikes: Boolean
  hasPostsLikesWith: [PostLikeWhereInput!]
  """
  comments_likes edge predicates
  """
  hasCommentsLikes: Boolean
  hasCommentsLikesWith: [CommentLikeWhereInput!]
  """
  bookmarks edge predicates
  """
  hasBookmarks: Boolean
  hasBookmarksWith: [BookmarkWhereInput!]
  """
  email_verifications edge predicates
  """
  hasEmailVerifications: Boolean
  hasEmailVerificationsWith: [EmailVerificationWhereInput!]
}
