package main

import (
	"context"
	"fmt"
	"log"

	"stormlink/server/ent"

	_ "github.com/lib/pq"
)

func main() {
	// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	client, err := ent.Open("postgres", "host=147.45.244.86 port=5442 user=stormic password=ojXJm6yYBfD87yFWFQq40Dfc dbname=stormic sslmode=disable")
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: %v", err)
	}
	defer client.Close()

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
	if err := client.Schema.Create(context.Background()); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ö–µ–º—ã: %v", err)
	}

	// –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ
	fmt.Println("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞...")
	
	rule, err := client.CommunityRule.
		Create().
		SetTitle("–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ").
		SetDescription("–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞").
		SetCommunityID(1).
		Save(context.Background())
	
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞: %v\n", err)
		
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
		fmt.Println("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã community_rules...")
		_, err := client.CommunityRule.Query().Limit(1).All(context.Background())
		if err != nil {
			fmt.Printf("‚ùå –¢–∞–±–ª–∏—Ü–∞ community_rules –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: %v\n", err)
			fmt.Println("üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é: psql -h localhost -U postgres -d stormlink -f migrate_community_rules.sql")
		} else {
			fmt.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ community_rules —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
		}
	} else {
		fmt.Printf("‚úÖ –ü—Ä–∞–≤–∏–ª–æ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ: ID=%d, Title=%s\n", rule.ID, rule.Title)
		
		// –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ
		client.CommunityRule.DeleteOne(rule).Exec(context.Background())
		fmt.Println("üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ —É–¥–∞–ª–µ–Ω–æ")
	}

	// –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
	fmt.Println("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª...")
	rules, err := client.CommunityRule.Query().All(context.Background())
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª: %v\n", err)
	} else {
		fmt.Printf("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∞–≤–∏–ª: %d\n", len(rules))
		for _, r := range rules {
			fmt.Printf("  - ID: %d, Title: %s\n", r.ID, r.Title)
		}
	}
}
